{"version":3,"sources":["components/Filter.js","services/Backend.js","components/PersonForm.js","components/Persons.js","App.js","index.js"],"names":["Filter","filterPerson","setFilterPerson","valute","onChange","event","target","value","url","PersonMethods","getPersons","axios","get","then","response","data","postPersons","personObject","post","remove","id","delete","update","put","Notification","message","className","PersonForm","persons","newPerson","newNumber","setNewPerson","setNewNumber","setPersons","useState","setMessage","checkPersonInArray","person","name","onSubmit","preventDefault","undefined","find","window","confirm","number","personsService","concat","type","Person","onClick","handleDelete","Persons","filter","slice","length","toLowerCase","map","App","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.433adebf.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({filterPerson, setFilterPerson}) => {\n\n  const handlePersonFilter = (event) => {\n    setFilterPerson(event.target.value)\n  }\n\n  return(\n    <div>\n      filter shown with <input valute={filterPerson} onChange={handlePersonFilter}/>\n    </div>\n  )\n}\n\nexport default Filter","import axios from 'axios'\n\nconst url =  'api/persons'\n\nconst getPersons = () => {\n    const request = axios.get(url)\n    return request.then(response => response.data)\n}\n\nconst postPersons = (personObject) => {\n    const request = axios.post(url, personObject)\n    return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    axios.delete(url + '/' + id)\n}\n\nconst update = (id, personObject) => {\n    const request = axios.put(url + '/' + id, personObject);\n    return request.then((response) => response.data);\n}\n\nconst PersonMethods = {\n    getPersons,\n    postPersons,\n    remove,\n    update\n}\nexport default PersonMethods;","import React, { useState } from 'react'\nimport personsService from '../services/Backend'\nimport '../index.css'\n\nconst Notification = ({message}) => {\n    if (message !== null){\n        return (\n            <div className=\"success\">\n                {message}\n            </div>\n        )\n    }\n    else{\n        return null\n    } \n}\n\nconst PersonForm = ({persons, newPerson, newNumber, setNewPerson, setNewNumber, setPersons}) => {\n    const [message, setMessage] = useState(null)\n\n    const checkPersonInArray = (person) => {\n        return person.name === newPerson\n    }\n\n    const addPerson = (event) => {\n        event.preventDefault()\n\n        if (persons.find(checkPersonInArray) !== undefined && persons.find(checkPersonInArray).name === newPerson){\n            const id = persons.find(checkPersonInArray).id\n            const result = window.confirm(`Are you sure you want to update the number of ${newPerson} as ${newNumber}` )\n            if (result) {\n                const personObject = {\n                    name: newPerson,\n                    number: newNumber\n                }\n                personsService.update(id, personObject)\n                personsService.getPersons().then((response) => {\n                    setPersons(response)\n                })\n                setMessage(newPerson + ' has been updated to the phonebook')\n            }\n        }\n\n        else{\n            const personObject = {\n                name: newPerson,\n                number: newNumber\n            }\n            personsService.postPersons(personObject)\n            setPersons(persons.concat(personObject))\n            setNewPerson(\"\")\n            setNewNumber(\"\")\n            setMessage(newPerson + ' has been added to the phonebook')\n        }\n    }\n\n    const handlePersonChange = (event) => {\n        setNewPerson(event.target.value)\n    }\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    return(\n        <>\n        <Notification message={message} />\n        <form onSubmit={addPerson}>\n        <div>\n            name: <input value={newPerson} onChange={handlePersonChange}/><br/><br />\n            number: <input value={newNumber} onChange={handleNumberChange}/><br/><br />\n        </div>\n        <div>\n            <button type=\"submit\">add</button>\n        </div>\n        </form>\n        </>\n    )\n}\n\nexport default PersonForm","import React from 'react'\nimport personsService from '../services/Backend'\n\nconst handleDelete = (id, person, setPersons) => {\n  const result = window.confirm( `Are you sure you want to delete ${person} ?` );\n  if (result){\n    personsService.remove(id)\n    personsService.getPersons().then((response) => {\n    setPersons(response)\n    })\n  }\n}\n\nconst Person = ({person, setPersons, id, number}) => {\n    return(\n      <p>\n        {person} {number}&nbsp;\n        <button onClick={() => handleDelete(id, person, setPersons)}>delete</button>\n      </p>\n    )\n}\n  \nconst Persons = ({persons, setPersons, filterPerson}) => {\n    const filterPersonList = () => {\n      return persons.filter(person => \n        person.name.slice(0, filterPerson.length).toLowerCase() === filterPerson.toLowerCase())\n    }\n    return(\n      <div>\n        {\n          filterPersonList().map(person =>\n            <Person key={person.name} setPersons={setPersons} id={person.id} person={person.name} number={person.number}/>\n            )\n        }\n      </div>\n    )\n}\n\nexport default Persons","import React, {useEffect, useState} from 'react';\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personsService from './services/Backend'\n\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newPerson, setNewPerson ] = useState('a new person !!!')\n  const [newNumber, setNewNumber] = useState('phone-number')\n  const [filterPerson, setFilterPerson] = useState('');\n\n  useEffect(() => {\n    personsService.getPersons().then((response) => {\n      setPersons(response)\n    })\n  }, [])\n  \n  return (\n    <div>\n      <h1>Phonebook</h1>\n      \n      <Filter \n        filterPerson={filterPerson} \n        setFilterPerson={setFilterPerson}\n      />\n      \n      <h2>add a new</h2>\n      \n      <PersonForm \n        persons={persons} \n        newPerson={newPerson} \n        newNumber={newNumber}\n        setPersons={setPersons} \n        setNewPerson={setNewPerson} \n        setNewNumber={setNewNumber}\n      />\n      \n      <h2>Numbers</h2>\n\n      <Persons \n        setPersons={setPersons}\n        persons={persons} \n        filterPerson={filterPerson} \n      />\n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// const promise = axios.get('http://localhost:3001/persons')\n// console.log(promise)\n\n// promise.then(response => {\n//   console.log(response)\n//   console.log(response.data)\n// })\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}